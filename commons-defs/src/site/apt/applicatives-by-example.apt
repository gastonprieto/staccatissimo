~~
~~  Copyright (c) 2011, The Staccato-Commons Team
~~
~~  This program is free software; you can redistribute it and/or modify
~~  it under the terms of the GNU Lesser General Public License as published by
~~  the Free Software Foundation; version 3 of the License.
~~
~~  This program is distributed in the hope that it will be useful,
~~  but WITHOUT ANY WARRANTY; without even the implied warranty of
~~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~  GNU Lesser General Public License for more details.
~~

Applicatives

* Introduction

 Staccato Commons Defs provides a set of interfaces that model function-like objects - objects with a single main message -, aka applicatives, which are used
 to permit higher-order programming within Staccato-Commons. They integrate with other interfaces and abstract classes provided by other Staccato projects
 and the JDK, configuring the following framework: 
 
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Type name              | Type            | Interface style | Argument count  | Return value |  Throws  | Project |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Thunk                  | Interface       | Thin            | 0               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Callable               | Interface       | Thin            | 0               | Generic      |Exception | JDK     |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Runnable               | Interface       | Thin            | 0               | void         |          | JDK     |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Applicable             | Interface       | Thin            | 1               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Applicable2            | Interface       | Thin            | 2               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Applicable3            | Interface       | Thin            | 3               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Executable             | Interface       | Thin            | 1               | void         |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Executable2            | Interface       | Thin            | 2               | void         |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Executable3            | Interface       | Thin            | 3               | void         |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Evaluable              | Interface       | Thin            | 1               | boolean      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Evaluable2             | Interface       | Thin            | 2               | boolean      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Comparator             | Interface       | Thin            | 2               | int          |          | JDK     |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Function               | Interface       | Rich            | 1               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Function2              | Interface       | Rich            | 2               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Function3              | Interface       | Rich            | 3               | Generic      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Predicate              | Interface       | Rich            | 1               | boolean      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| Pedicate2              | Interface       | Rich            | 2               | boolean      |          | Defs    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| AbstractFunction       | Abstract Class  | Rich            | 1               | Generic      |          | Lang    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| AbstractFunction2      | Abstract Class  | Rich            | 2               | Generic      |          | Lang    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| AbstractFunction3      | Abstract Class  | Rich            | 3               | Generic      |          | Lang    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| AbstractPredicate      | Abstract Class  | Rich            | 1               | boolean      |          | Lang    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| AbstractPredicate2     | Abstract Class  | Rich            | 2               | boolean      |          | Lang    |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
| MonadicFunction        | Interface       | Rich            | 1               | Monad        |          | Control |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:
|AbstractMonadicFunction | Interface       | Rich            | 1               | Monad        |          | Control |
*------------------------*-----------------+-----------------+-----------------+--------------+----------+---------:


~~** Composition
~~Simple
~~Math-composition
~~MonadComposition
~~PredicateComposition
~~+---
~~  
~~+----
