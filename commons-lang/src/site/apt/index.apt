~~
~~  Copyright (c) 2011, The Staccato-Commons Team
~~
~~  This program is free software; you can redistribute it and/or modify
~~  it under the terms of the GNU Lesser General Public License as published by
~~  the Free Software Foundation; version 3 of the License.
~~
~~  This program is distributed in the hope that it will be useful,
~~  but WITHOUT ANY WARRANTY; without even the implied warranty of
~~  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
~~  GNU Lesser General Public License for more details.
~~

About Staccato-Commons-Lang 
 
 Staccato-Commons-Lang is the core library of the {{{http://staccatocommons.sourceforge.net}Staccato-Commons project}}. 
It offers options, tuples, lazy values, functor objects, builders, lifecycles, ranges and sequences.  
 
Beta State 

 Staccato-Commons-Lang is currently in beta state. It should not be used in productive systems yet. 

Getting Started

  Staccato-Commons-Lang resolves simple and common everyday problems. Descriptions of such problems, solutions and examples 
  can be found in the following links:
  
  * {{{relevant-state-by-example.html}RelevantState}} and BasicEquals
   - Consistently implementing equals, hashcode, toString, and/or compareTo in an efficient 
  way and without boilerplate code. 
  
  * {{{prioritized-by-example.html}Prioritized}} - Prioritizing elements in sorted collections
  
  * Nulls and Option - Handling nulls and optional values
  
  * Handle - Handling exceptions in a high level way
  
  * Range - Expressing a range of comparable objects
  
  * Builders - Templates for creating builder-pattern style objects
  
  * MapBuilder and CollectionBuilder - Builders for creating unmodifiable collections and maps
  
  * Compare - Functions and utilities for comparing elements
  
  * Sequences - An iterable source of objects where next object is computed based on the previous     
  
  * Tuples
  
  * Lifecycle
  
  * Predicates, Functions and Thunks - abstract and concrete implementations 
  of the rich, function-like interface defined by staccato-commons-defs
  
  * Equiv - Common equality relation implementations 
  
  * SoftExceptions
     
  * Numbers and NumberTypes - Compactly express BigInteger and BigDecimal literals, and deal with numeric types polimorphically.  
  
   
  
 
