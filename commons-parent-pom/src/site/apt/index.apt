Purpose - What is Staccato-Commons?
 
 Staccato Commons is a FLOSS project that is aimed to extend and integrate existing Java frameworks in order to fill their gaps and unificate abstractions, focusing on productivity and maintainability, in a full object oriented way and borrowing functional concepts and techniques.

Staccato-Commons Principles

 Staccato Commons project follows the following guidelines, called Staccato Commons Principles, a set of requirements that all it code must observe:
 
 * Java-centric and IoC capable. Staccato Commons does not define and avoids configuration files. Every configuration, when needed, must be done programatically. If you  want to move that aspect out from your code - which may be probably a good idea - just configure them using a mature IoC container like Spring. 
  
 * Object Oriented. Staccato Commons offers object oriented solutions - or solutions that explode objected orientation as much as Java can offer - and is implemented using the same techniques and design patterns.
  
 * Functional. Staccato Commons solutions make use of techniques and concepts borrowed from functional paradigm. It encourages immutable objects, pure code - without side effect - messages, function-like objects and laziness.
 
 * Documented and Javadoc-friendly. Staccato Commons is fully documented using Javadoc and documentation annotations.
  
 * Generic. Staccato Commons makes extensive use of Java Generics
 
 * Rich, fluent interfaces. Staccato-Commons classes and interfaces will always maximize the amount usefull, fluent methods exposition, in order to make client code cleaner. Complexity is not handled by client.
 
 * Interfaces by contract, not by usage
  
 * DRY. Staccato Commons libraries have ease of usage and code reuse as a priority, both for its implementation and the client code. It does reinvent the wheel defining new interfaces and classes, when they are already there. 
 
 * Pragmatic. Staccato Commons is not a research project. It offers solutions that work.
  
Staccato-Commons Organization
 
 The project is divided into two main categories:
 
 * Staccatissimo.  Extensions to general pupose libraries like Apache Commons Lang and the JDK itself. They are the core of Staccato Commons: stable classes, annotations and interfaces, on which all the staccato projects depend
 
 * Legato - extansions to any other frameworks does not fall in the previous category, oriented to logging, persistence, etc.
 
Main Projects

 * {{{http://staccatocommons.sourceforge.net/staccatissimo/commonslang}staccato-commons-lang}}: the core staccatissimo library. It offers options, tuples, lazy values, functor object interfaces and abstract classes, builders, a generic validations ecosystem, jsrlifecycles, ranges, sequences, generic serialization managers and variables formatting.
 
 * {{{http://staccatocommons.sourceforge.net/staccatissimo/commonscollections}staccato-commons-collections}}: streams - rich, lazy, iterable, general purpose collection generalization - and utility classes that offers near 50 frequent and simple, generic, algorithms on iterables, collections, maps and lists, like filtering (aka selecting), mapping (aka collecting), folding and reducing (aka injecting), zipping and testing a condition for all or any element, and much more.
   
 * staccato-commons-testing
 
 * staccato-commons-instrument
 
 * staccato-commons-check-instrument and staccato-commons-check-instrument-maven-plugin 
 
